{"version":3,"sources":["github-icon.svg","App.js","index.js"],"names":["Example1","strings","Example2","animationType","Example3","seconds","Example4","fixedWidthInPx","Example5","className","Example5a","fixedAlign","Example6","Syntax","children","language","style","xonokai","wrapLines","Example","component","codeString","Header","Fragment","href","src","githubIcon","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.911f9b01.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github-icon.164d6380.svg\";","import React from \"react\";\nimport TextSwap from \"react-text-swap\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { xonokai } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport githubIcon from './github-icon.svg';\n\n// ------------------------\n//         Examples\n// ------------------------\n\nconst Example1 = () => (\n  <p>\n    The <em>fade</em> animation is the default, and is super&nbsp;\n    <TextSwap strings={[\"convenient.\", \"simple.\", \"easy.\", \"awesome.\"]} />\n  </p>\n);\n\nconst example1String = `<p>\n  The <em>fade</em> animation is the default, and is super&nbsp;\n  <TextSwap strings={[\"convenient.\", \"simple.\", \"easy.\", \"awesome.\"]} />\n</p>`;\n\nconst Example2 = () => (\n  <div>\n    <p>\n      Use the <em>slideUp</em> animation to show off your&nbsp;\n      <TextSwap\n        strings={[\"text.\", \"words.\", \"strings.\"]}\n        animationType=\"slideUp\"\n      />\n    </p>\n    <p>\n      Use the <em>slideDown</em> animation to show off your&nbsp;\n      <TextSwap\n        strings={[\"text.\", \"words.\", \"strings.\"]}\n        animationType=\"slideDown\"\n      />\n    </p>\n    <p>\n      Use the <em>blur</em> animation to show off your&nbsp;\n      <TextSwap\n        strings={[\"text.\", \"words.\", \"strings.\"]}\n        animationType=\"blur\"\n      />\n    </p>\n  </div>\n);\n\nconst example2String = `<p>\n  Use the <em>slideUp</em> animation to show off your&nbsp;\n  <TextSwap\n    strings={[\"text.\", \"words.\", \"strings.\"]}\n    animationType='slideUp'\n  />\n</p>\n\n<p>\n  Use the <em>slideDown</em> animation to show off your&nbsp;\n  <TextSwap\n    strings={[\"text.\", \"words.\", \"strings.\"]}\n    animationType='slideDown'\n  />\n</p>\n\n<p>\n  Use the <em>blur</em> animation to show off your&nbsp;\n  <TextSwap\n    strings={[\"text.\", \"words.\", \"strings.\"]}\n    animationType='blur'\n  />\n</p>`;\n\nconst Example3 = () => (\n  <div>\n    <p>\n      Use the <em>seconds</em> prop to slow down your&nbsp;\n      <TextSwap strings={[\"text.\", \"words.\", \"strings.\"]} seconds={3} />\n    </p>\n    <p>\n      Or to speed up your&nbsp;\n      <TextSwap strings={[\"text.\", \"words.\", \"strings.\"]} seconds={1} />\n    </p>\n    (By default, it's set to 2 seconds).\n  </div>\n);\n\nconst example3String = `<p>\n  Use the <em>seconds</em> prop to slow down your&nbsp;\n  <TextSwap\n    strings={[\"text.\", \"words.\", \"strings.\"]}\n    seconds={3}\n  />\n</p>\n\n<p>\n  Or to speed up your&nbsp;\n  <TextSwap\n    strings={[\"text.\", \"words.\", \"strings.\"]}\n    seconds={1}\n  />\n</p>`;\n\nconst Example4 = () => (\n  <div>\n    <p>\n      Putting&nbsp;\n      <TextSwap strings={[\"text\", \"words\", \"strings\"]} />\n      &nbsp;in the middle of a sentence can be tricky.\n    </p>\n    <p>\n      So use the <em>fixedWidthInPx</em> prop to keep your&nbsp;\n      <TextSwap strings={[\"text\", \"words\", \"strings\"]} fixedWidthInPx={50} />\n      &nbsp;from resizing the sentence.\n    </p>\n  </div>\n);\n\nconst example4String = `<p>\n  Putting&nbsp;\n  <TextSwap strings={[\"text\", \"words\", \"strings\"]} />\n  &nbsp;in the middle of a sentence can be tricky.\n</p>\n\n<p>\n  So use the <em>fixedWidthInPx</em> prop to keep your&nbsp;\n  <TextSwap\n    strings={[\"text\", \"words\", \"strings\"]}\n    fixedWidthInPx={45}\n  />\n  &nbsp;from resizing the sentence.\n</p>`;\n\nconst Example5 = () => (\n  <div className=\"center-align\">\n    <p>\n      We get the same problem when we center&nbsp;\n      <TextSwap strings={[\"text.\", \"words.\", \"strings.\"]} />\n    </p>\n    <p>\n      Once again, <em>fixedWidthInPx</em> brings order to our&nbsp;\n      <TextSwap strings={[\"text.\", \"words.\", \"strings.\"]} fixedWidthInPx={50} />\n    </p>\n  </div>\n);\n\nconst example5String = `<p>\n  We get the same problem when we center&nbsp;\n  <TextSwap strings={[\"text.\", \"words.\", \"strings.\"]} />\n</p>\n\n<p>\n  Once again, <em>fixedWidthInPx</em> brings order to our&nbsp;\n  <TextSwap\n    strings={[\"text.\", \"words.\", \"strings.\"]}\n    fixedWidthInPx={50}\n  />\n</p>`;\n\nconst Example5a = () => (\n  <div className=\"center-align\">\n    <p>\n      Sometimes we'll see weird spacing&nbsp;\n      <TextSwap\n        strings={[\"difficulties.\", \"issues.\", \"bugs.\"]}\n        fixedWidthInPx={82}\n      />\n    </p>\n    <p>\n      But using the <em>fixedAlign</em> prop can solve those&nbsp;\n      <TextSwap\n        strings={[\"difficulties.\", \"issues.\", \"bugs.\"]}\n        fixedWidthInPx={82}\n        fixedAlign=\"left\"\n      />\n    </p>\n  </div>\n);\n\nconst example5aString = `<p>\n  Sometimes we'll see weird spacing&nbsp;\n  <TextSwap\n    strings={[\"difficulties.\", \"issues.\", \"bugs.\"]}\n    fixedWidthInPx={82}\n  />\n</p>\n\n<p>\n  But using the <em>fixedAlign</em> prop can solve those&nbsp;\n  <TextSwap\n    strings={[\"difficulties.\", \"issues.\", \"bugs.\"]}\n    fixedWidthInPx={82}\n    fixedAlign=\"left\"\n  />\n</p>`;\n\nconst Example6 = () => (\n  <div className=\"center-align\">\n    <h2>\n      Style your&nbsp;\n      <div className=\"bold-yellow\">\n        <TextSwap\n          strings={[\"text.\", \"words.\", \"strings.\"]}\n          fixedWidthInPx={70}\n          fixedAlign=\"left\"\n        />\n      </div>\n    </h2>\n    <h2>\n      Be&nbsp;\n      <div className=\"display-font\">\n        <TextSwap\n          strings={[\"creative\", \"unique\", \"clever\", \"artistic\"]}\n          fixedWidthInPx={85}\n          animationType=\"blur\"\n        />\n      </div>\n      &nbsp;about it.\n    </h2>\n    <h2>\n      Make your site look&nbsp;\n      <div className=\"black-box\">\n        <TextSwap\n          strings={[\"cool.\", \"awesome.\", \"weird.\"]}\n          animationType=\"slideDown\"\n          fixedWidthInPx={110}\n        />\n      </div>\n    </h2>\n  </div>\n);\n\nconst example6String = `<h2>\n  Style your&nbsp;\n  <div className=\"my-bold-yellow-class\">\n    <TextSwap\n      strings={[\"text.\", \"words.\", \"strings.\"]}\n      fixedWidthInPx={70}\n      fixedAlign=\"left\"\n    />\n  </div>\n</h2>\n\n<h2>\n  Be&nbsp;\n  <div className=\"my-display-font-class\">\n    <TextSwap\n      strings={[\"creative\", \"unique\", \"clever\", \"artistic\"]}\n      animationType=\"blur\"\n      fixedWidthInPx={85}\n    />\n  </div>\n  &nbsp;about it.\n</h2>\n\n<h2>\n  Make your site look&nbsp;\n  <div className=\"my-black-box-class\">\n    <TextSwap\n      strings={[\"cool.\", \"awesome.\", \"weird.\"]}\n      animationType=\"slideDown\"\n      fixedWidthInPx={100}\n    />\n  </div>\n</h2>`;\n\n// ------------------------\n//      Sub-Components\n// ------------------------\n\nconst Syntax = ({ children }) => (\n  <div>\n    <SyntaxHighlighter language=\"jsx\" style={xonokai} wrapLines={true}>\n      {children}\n    </SyntaxHighlighter>\n  </div>\n);\n\nconst Example = ({ component, codeString }) => (\n  <div className=\"example\">\n    {component}\n    <Syntax>{codeString}</Syntax>\n  </div>\n);\n\nconst Header = () => (\n  <React.Fragment>\n    <h1>react-text-swap</h1>\n    <h2>\n      a react component for swapping{\" \"}\n      <span className=\"header-text-swap\">\n        <TextSwap strings={[\"text\", \"words\", \"strings\"]} fixedWidthInPx={38} />\n      </span>\n    </h2>\n    <SyntaxHighlighter language=\"bash\" style={xonokai}>\n      {\"npm install react-text-swap\"}\n    </SyntaxHighlighter>\n    <a className=\"button\" href=\"https://github.com/jessica-px/react-text-swap\">\n      <img src={githubIcon} alt=\"Github Icon\"/> GitHub\n    </a>\n  </React.Fragment>\n);\n\n// ------------------------\n//       Main Component\n// ------------------------\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <h1>Examples</h1>\n      <Example component={<Example1 />} codeString={example1String} />\n      <Example component={<Example2 />} codeString={example2String} />\n      <Example component={<Example3 />} codeString={example3String} />\n      <Example component={<Example4 />} codeString={example4String} />\n      <Example component={<Example5 />} codeString={example5String} />\n      <Example component={<Example5a />} codeString={example5aString} />\n      <Example component={<Example6 />} codeString={example6String} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}